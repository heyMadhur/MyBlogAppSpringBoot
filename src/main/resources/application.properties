spring.application.name=BlogApp


spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

#spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/BlogApp}
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:BlogApp}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:12345}
spring.jpa.hibernate.ddl-auto=update

springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui-custom.html

# Spring AI
spring.ai.openai.api-key=${SPRING_AI_OPENAI_API_KEY:dummyAPIKEY}
spring.ai.openai.base-url=${SPRING_AI_OPENAI_BASE_URL:https://api.deepseek.com/}
spring.ai.ollama.base-url=${SPRING_AI_OLLAMA_BASE_URL:http://localhost:11434/}

# AWS Configuration
cloud.aws.credentials.access-key=${CLOUD_AWS_CREDENTIALS_ACCESS_KEY:dummyAccessKey}
cloud.aws.credentials.secret-key=${CLOUD_AWS_CREDENTIALS_SECRET_KEY:dummySecretKey}
cloud.aws.region.static=${CLOUD_AWS_REGION_STATIC:us-east-1}
cloud.aws.stack.auto=false
app.s3.bucket=${APP_S3_BUCKET:springboottestbucket001}

#Production Env
#spring.datasource.url=jdbc:postgresql://${PGHOST}:${PGPORT}/${PGDATABASE}
#spring.datasource.username=${PGUSER}
#spring.datasource.password=${PGPASSWORD}
#spring.jpa.hibernate.ddl-auto=update